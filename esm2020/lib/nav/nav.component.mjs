import { Component } from '@angular/core';
import * as i0 from "@angular/core";
export class NavComponent {
}
NavComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: NavComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NavComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: NavComponent, selector: "lib-nav", ngImport: i0, template: "<p>nav works!</p>\r\n", styles: [""] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: NavComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-nav', template: "<p>nav works!</p>\r\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25vdmFmcmFtZXdvcmsvc3JjL2xpYi9uYXYvbmF2LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25vdmFmcmFtZXdvcmsvc3JjL2xpYi9uYXYvbmF2LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTzFDLE1BQU0sT0FBTyxZQUFZOzt5R0FBWixZQUFZOzZGQUFaLFlBQVksK0NDUHpCLHVCQUNBOzJGRE1hLFlBQVk7a0JBTHhCLFNBQVM7K0JBQ0UsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdsaWItbmF2JyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbmF2LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9uYXYuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmF2Q29tcG9uZW50IHtcclxuICAvLyBPYmplY3QgPSBPYmplY3Q7IEBJbnB1dCgpIHVzdWFyaW86IHN0cmluZyA9ICcnOyBASW5wdXQoKSBuYXY6IGFueSA9IFtdOyBASW5wdXQoKSBmZWNoYTogc3RyaW5nID0gJyc7IEBJbnB1dCgpIGhvcmE6IGFueSA9ICcnOyBjb25zdHJ1Y3RvciggcHJpdmF0ZSBkYXRhU2VydmljZTogRGF0YVNlcnZpY2UsIHB1YmxpYyBnbG9iYWxTZXJ2aWNlOiBHbG9iYWxTZXJ2aWNlLCBwcml2YXRlIGVuY3JpcHRhY2lvblNydjogRW5jcmlwdGFjaW9uU2VydmljaW9zLCBwdWJsaWMgc2VydmljaW9DbGllbnRlU2VydmljZTogU2VydmljaW9DbGllbnRlU2VydmljZSwgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcikgeyB9IG5nT25Jbml0KCkgeyBmb3IgKGxldCBlbGVtZW50byBvZiB0aGlzLm5hdikgeyBlbGVtZW50by5tb3N0cmFyU3ViTWVudSA9IGZhbHNlOyBjb25zb2xlLmxvZygnZWxlbWVudG86ICcsIGVsZW1lbnRvKTsgfSB9XHJcblxyXG5cclxuICAvLyBtb3N0cmFyU3ViTWVudShpZDogbnVtYmVyKSB7XHJcbiAgLy8gICBsZXQgb3BjaW9uZXMgPSB0aGlzLm5hdi5maWx0ZXIoKGl0ZW06IGFueSkgPT4gaXRlbS5ub21icmVfZ3J1cG8gIT09IGlkKTtcclxuICAvLyAgIGZvciAobGV0IGVsZW1lbnRvIG9mIG9wY2lvbmVzKSB7XHJcbiAgLy8gICAgIGVsZW1lbnRvLm1vc3RyYXJTdWJNZW51ID0gZmFsc2U7XHJcbiAgLy8gICB9XHJcbiAgLy8gICBsZXQgb3BjaW9uID0gdGhpcy5uYXYuZmlsdGVyKChpdGVtOiBhbnkpID0+IGl0ZW0ubm9tYnJlX2dydXBvID09PSBpZCk7XHJcbiAgLy8gICBpZiAob3BjaW9uWzBdLm1vc3RyYXJTdWJNZW51ID09PSB0cnVlKSB7XHJcbiAgLy8gICAgIG9wY2lvblswXS5tb3N0cmFyU3ViTWVudSA9IGZhbHNlO1xyXG4gIC8vICAgICByZXR1cm47XHJcbiAgLy8gICB9XHJcbiAgLy8gICBvcGNpb25bMF0ubW9zdHJhclN1Yk1lbnUgPSB0cnVlO1xyXG5cclxuICAvLyB9XHJcblxyXG4gIC8vIGNhcGl0YWxpemFyKHRleHRvOiBzdHJpbmcpIHtcclxuICAvLyAgIHJldHVybiB0ZXh0by5yZXBsYWNlKC9cXHdcXFMqL2csIGZ1bmN0aW9uICh0eHQpIHtcclxuICAvLyAgICAgcmV0dXJuIHR4dC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHR4dC5zdWJzdHJpbmcoMSkudG9Mb3dlckNhc2UoKTtcclxuICAvLyAgIH0pO1xyXG4gIC8vIH1cclxuXHJcbiAgLy8gcmVkaXJlY3QodXJsOiBzdHJpbmcsIGZ1bmNpb246IGFueSkge1xyXG4gIC8vICAgLy8gc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnZnVuY2lvbicsIEpTT04uc3RyaW5naWZ5KHRoaXMuZW5jcmlwdGFjaW9uU3J2LmVuY3J5cHREYXRhKEpTT04uc3RyaW5naWZ5KGZ1bmNpb24ubm9tYnJlX2Z1bmNpb24pKSkpO1xyXG4gIC8vICAgLy8gdGhpcy5nbG9iYWxTZXJ2aWNlLkZVTkNJT04gPSBmdW5jaW9uLm5vbWJyZV9mdW5jaW9uO1xyXG4gIC8vICAgLy8gbGV0IGZ1bmNpb25fb2JqZXRvcyA9IFtdO1xyXG4gIC8vICAgLy8gZm9yKGxldCBpPTA7IGk8ZnVuY2lvbi5vYmpldG9zLmxlbmd0aDsgaSsrKXtcclxuICAvLyAgIC8vICAgZnVuY2lvbl9vYmpldG9zLnB1c2goZnVuY2lvbi5vYmpldG9zW2ldLm5vbWJyZV9vYmpldG8pO1xyXG4gIC8vICAgLy8gfVxyXG4gIC8vICAgLy9zZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwib2JqZXRvc1wiLCBKU09OLnN0cmluZ2lmeSh0aGlzLmVuY3JpcHRhY2lvblNydi5lbmNyeXB0RGF0YShKU09OLnN0cmluZ2lmeShmdW5jaW9uX29iamV0b3MpKSkpO1xyXG5cclxuXHJcbiAgLy8gICBsZXQgbW9kdWxvID0gdGhpcy5lbmNyaXB0YWNpb25TcnYuZGVjcnlwdERhdGEoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShcIm1vZHVsb1wiKSk7XHJcbiAgLy8gICBsZXQgaXAgPSB0aGlzLmVuY3JpcHRhY2lvblNydi5kZWNyeXB0RGF0YShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwiaXBcIikpO1xyXG4gIC8vICAgbGV0IHVzdWFyaW9fY3JlYWNpb24gPSB0aGlzLmVuY3JpcHRhY2lvblNydi5kZWNyeXB0RGF0YShzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKFwicGtfZW50aWRhZFwiKSk7XHJcbiAgLy8gICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdmdW5jaW9uJywgSlNPTi5zdHJpbmdpZnkodGhpcy5lbmNyaXB0YWNpb25TcnYuZW5jcnlwdERhdGEoZnVuY2lvbikpKTtcclxuICAvLyAgIHRoaXMuZGF0YVNlcnZpY2UuZXZlbnRsb2coeyAncGFyX21vZHVsbyc6IG1vZHVsbywgJ3Bhcl9mdW5jaW9uJzogZnVuY2lvbi5ub21icmVfZnVuY2lvbiwgJ3Bhcl9hY2Npb24nOiAnQ09OU1VMVEFSJywgJ3Bhcl9pcCc6IGlwLCAncGFyX3VzdWFyaW9fY3JlYWNpb24nOiB1c3VhcmlvX2NyZWFjaW9uIH0pO1xyXG4gIC8vICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoWycvc2VydmljaW8tY2xpZW50ZS8nICsgdXJsXSk7XHJcbiAgLy8gfVxyXG5cclxuICAvLyBjZXJyYXJTZXNpb24oKSB7XHJcbiAgLy8gICBzZXNzaW9uU3RvcmFnZS5jbGVhcigpO1xyXG4gIC8vICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoWycvbG9naW4nXSk7XHJcbiAgLy8gfVxyXG5cclxuICAvLyBhY3RpdmVPcHRpb24odXJsOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAvLyAgIHJldHVybiB0aGlzLnJvdXRlci5pc0FjdGl2ZShgL3NlcnZpY2lvLWNsaWVudGUke3VybH1gLCBmYWxzZSk7XHJcbiAgLy8gfVxyXG5cclxufVxyXG4iLCI8cD5uYXYgd29ya3MhPC9wPlxyXG4iXX0=